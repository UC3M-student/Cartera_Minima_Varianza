# -*- coding: utf-8 -*-
"""Cartera_minima_varianza.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1arn2SYw7AX2SvkKyhPxIK7UfA7_DLhss
"""

def get_yahoo_data_table_format(tickers_list, start_date, end_date, interval,data_to_excel_yes_or_no):

  # LIBRARIES
  import yfinance as yf # Get the data from Yahoo
  import pandas as pd
  import numpy as np

  data = yf.download(tickers, start = start_date, end = end_date , interval = interval)['Close']

  # Delete all timezones
  data.index = data.index.tz_localize(None)

  # Delete the columns with a missing vale
  data = data.dropna(axis=1)

  # If there is no data then arraise this error
  if data.empty:
    print("Warning: DataFrame is empty after dropping columns with missing values.")
    return data # Return empty DataFrame


  # Convert data into a Matrix
  data_matrix = np.matrix(data.to_numpy())

  # - ly Returns data
  data_matrix_returns = np.diff(data_matrix, axis=0) / data_matrix[:-1]


  if data_to_excel_yes_or_no  == "yes":

    # Convert data_matrix_returns back to a pandas DataFrame for to_excel
    data_matrix_returns_df = pd.DataFrame(data_matrix_returns, columns=data.columns)

    # Create an excel of the returs data
    data_matrix_returns_df.to_excel("data_matrix_returns.xlsx")


  return data_matrix_returns


tickers = [
    'AAPL', 'MSFT', 'GOOGL', 'AMZN', 'NVDA', 'TSLA', 'META', 'PEP', 'AVGO', 'COST',
    'ADBE', 'NFLX', 'TXN', 'INTC', 'QCOM', 'CSCO', 'AMD', 'AMGN', 'HON', 'INTU',
    'AMAT', 'BKNG', 'SBUX', 'VRTX', 'MDLZ', 'GILD', 'ADP', 'ISRG', 'FISV', 'ADI',
    'REGN', 'MRNA', 'LRCX', 'MU', 'ASML', 'SNPS', 'PANW', 'KLAC', 'CTAS', 'NXPI',
    'CHTR', 'IDXX', 'CDNS', 'KDP', 'XEL', 'FTNT', 'CSX', 'MAR', 'MELI', 'WDAY',
    'ORLY', 'AEP', 'MRVL', 'PAYX', 'TEAM', 'MNST', 'ODFL', 'ROST', 'PCAR', 'EXC',
    'VRSK', 'CRWD', 'ABNB', 'LCID', 'AZN', 'WBD', 'SGEN', 'PDD', 'DDOG', 'ZM',
    'DXCM', 'BKR', 'ZS', 'OKTA', 'BIIB', 'SPLK', 'FAST', 'CTSH', 'NTES', 'ANSS',
    'EBAY', 'VRSN', 'LULU', 'ALGN', 'SWKS', 'CDW', 'CHKP', 'SIRI', 'MTCH', 'CPRT',
    'TTWO', 'DLTR', 'FOXA', 'FOX', 'CEG', 'QRVO', 'INVH'
]



#start_date = "2024-04-01"
#end_date = "2024-08-31"
#interval = "1wk"

# Pregunta CHATGPT: how to compute a portfolio that minimizes the tracking error subject to a benchmark portfolio in Python

get_yahoo_data_table_format(tickers, "2005-04-01", "2024-08-31", "1d", "no" )